# name: Create new pull request

# on:
#   workflow_dispatch:
#   issues:
#     types: [ opened, edited ]

# jobs:
#   check:
#     runs-on: ubuntu-latest
#     outputs:
#       phraseExists: ${{ steps.check-body.outputs.result }}
#     steps:
#       - name: Check if issue body contains 'Hey ontobot'
#         id: check-body
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const issue = await github.rest.issues.get({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               issue_number: context.issue.number
#             });
#             if (!issue.data.body) {
#               console.log('Issue body is empty or null');
#               return false;
#             }
#             return issue.data.body.includes('Hey ontobot');

#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         python-version: ["3.9"]
#         os: [ ubuntu-latest ]

#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up Python
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Get issue number and repository name
#         id: gh-script
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const issue_number = context.issue.number;
#             const repo = context.repo.owner+"/"+context.repo.repo;
#             return {issue_number, repo};

#       - name: Set environment variables
#         id: vars
#         run: |
#           echo "resource=src/ontology/mondo-edit.obo" >> $GITHUB_ENV
#           echo "branch-name=ochange_automation_"${{ steps.gh-script.outputs.result.issue_number }} >> $GITHUB_ENV

#       - name: Install dependencies
#         run: pip install ontobot-change-agent

#       - name: Run ochange
#         id: ochange
#         run: |
#           ochange process-issue ${{ env.resource }} \
#           -r ${{ steps.gh-script.outputs.result.repo }} \
#           -n ${{ steps.gh-script.outputs.result.issue_number }} \
#           -g ${{ secrets.GH_TOKEN }}
#           -p XXXX

#       - name: Create Pull Request
#         uses: peter-evans/create-pull-request@v4
#         if: ${{ env.PR_TITLE}}
#         with:
#           branch-suffix: short-commit-hash
#           labels: Automated
#           body: ${{ env.PR_BODY }}
#           title: ${{ env.PR_TITLE }}
#           base: ${{ github.head_ref }}
#           branch: ${{ env.branch-name }}
