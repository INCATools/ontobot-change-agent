name: Create new pull request

on:
  workflow_dispatch:
  issues:
    types: [ opened, edited ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9"]
        os: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3

      - name: GH-Script
        id: gh-script
        uses: actions/github-script@v6.1.1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          result-encoding: string
          script: return ${{context.issue.number}}

      - name: Set issue_number
        run: |
          echo "${{ steps.gh-script.outputs.result }}"
          echo "ISSUE_NUMBER= "${{ steps.gh-script.outputs.result }}"" >> $GITHUB_ENV

      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist 
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run ocrawl
        id: ocrawl
        run: |
          echo ${{ secrets.GH_TOKEN }} >> src/onto_crawler/token.txt
          poetry run ocrawl process-issue -n $ISSUE_NUMBER -o test.obo

      - name: Set branch name
        id: vars
        run: echo ::set-output name=branch-name::"test-1234"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          branch-suffix: short-commit-hash
          labels: Automated
          body: ${{ steps.ocrawl.outputs.BR_BODY }}
          title: ${{ steps.ocrawl.outputs.BR_TITLE }}
          base: ${{ github.head_ref }}
          branch: ${{ steps.vars.outputs.branch-name }}